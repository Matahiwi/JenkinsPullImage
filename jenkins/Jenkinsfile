pipeline {
    agent {
        docker {
            image 'docker:latest'
            args '--privileged -u root'
        }
    }
    environment{
        AWS_ACCOUNT_ID=credentials('dev-aws-account')  // store as a secret - see 1_docker_build_push_to_ecr.txt
        AWS_DEFAULT_REGION="ap-southeast-2" 
        IMAGE_REPO_NAME="tauputa-php"
        IMAGE_TAG="latest"
        REPOSITORY_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
        NEW_IMAGE_NAME="nginx"
    }

    stages {
        stage('Installing aws cli into docker container') {
            steps {
                sh """
                   apk update
                   apk add --no-cache aws-cli
                   aws --version
                   docker --version
                   aws ecr describe-repositories
                   sleep 180 
                """
            }
        }
        stage('Logging into AWS ECR') {
            steps {
                sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
            }
        }
        stage('Pulling The Docker Image') {
            steps {
                sh """
                   docker images
                   docker pull ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}
                   docker tag ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG} ${NEW_IMAGE_NAME}:${IMAGE_TAG}
                   docker images
                   docker rmi ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}
                """
            }
        }
        stage('Creating Docker Container From the Image') {
            steps {
                sh """
                    docker create -p 80:80 --name ${NEW_IMAGE_NAME} ${NEW_IMAGE_NAME}:${IMAGE_TAG}
                    docker ps -a
                """
            }
        }

    }
}
